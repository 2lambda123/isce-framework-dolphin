# Options common to multiple workflow steps
input_vrt_file:
weight_file: 'nmap'
mask_file: ''
nmap_count_file: 'count'
ps_file: 'ps_pixels'


# Output folders for each stage
directories:
  wrapped_output: 'wrapped_phase'
  nmap: 'nmap'
  ps: 'PS'

# Multilook window size
window:
  xhalf: 11
  yhalf: 5

processing:
  # Options for how large of chunks to use at a time
  lines_per_block: 64
  ram: 512

# Options specific to stages of the workflow:
# ##########################################

# Relevant Fringe command example:
# ampdispersion.py -i stack/slcs_base.vrt -o ampDispersion/ampdispersion -m ampDispersion/mean
# gdal_calc.py --calc="a<0.42"  -a=ampDispersion/ampdispersion  --outfile ampDispersion/ps_pixels --format ENVI --type Byte --overwrite
ps:
  amp_disp_file: 'amp_dispersion'
  amp_mean_file: 'mean'
  amp_dispersion_threshold: 0.42
  normalizing_reference_band: 1


# Relevant Fringe command example:
# nmap.py -i stack/slcs_base.vrt -o nmap/nmap -c nmap/count -x 11 -y 5
nmap:
  # Minimum p-value for labeling neighbors.
  pvalue: 0.05
  stat_method: 'KS2'
  # Explicitly do not use GPU
  no_gpu: false

# Relevant Fringe command example:
# evd.py -i stack/slcs_base.vrt -o EVD -x 11 -y 5 -w nmap/nmap
evd:
  # Minimum number of neighbors for computation
  minimum_neighbors: 5
  # Decomposition method to use - MLE / EVD
  method: 'mle'
  compressed_slc_file: 'compslc.bin'

# Relevant Fringe commands:
# integratePS.py -s stack/slcs_base.vrt -d EVD -t EVD/tcorr.bin -p ampDispersion/ps_pixels -o PS_DS --unwrap_method snaphu
integrate:
  temp_coh_file: 'tcorr.bin'
  unwrap_method: 'snaphu'
